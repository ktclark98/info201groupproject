}
counts.df <- GetCountryCount("PS")
View(counts.df)
source("get-data.R")
country.ep <- "/api/v3/country/list?token="
country <- AccessAPI(country.ep)
country.df <- country[[2]]
country.code <- country.df$isocode
uz.data <- "/api/v3/country/getspecies/UZ?token="
uz <- AccessAPI(jp.data)
uz <- AccessAPI(uz.data)
uz.count <- jp[[1]]
counts.df <- data.frame("UZ", uz.count, stringsAsFactors = FALSE)
uz <- AccessAPI(uz.data)
uz.count <- jp[[1]]
uz.count <- uz[[1]]
counts.df <- data.frame("UZ", uz.count, stringsAsFactors = FALSE)
names(counts.df) <- c("Country", "Count")
GetCountryCount <- function(country.id) {
endpoint <- paste0("/api/v3/country/getspecies/", country.id, "?token=")
country <- AccessAPI(endpoint)
country.count <- country[[1]]
# add to df
df <- c(country.id, country.count)
names(df) <- c("Country", "Count")
return(rbind(counts.df, df))
}
counts.df <- GetCountryCount("PS")
View(counts.df)
counts.df <- GetCountryCount(country.code)
counts.df <- data.frame("UZ", uz.count, stringsAsFactors = FALSE)
counts.df <- data.frame("UZ", uz.count, stringsAsFactors = FALSE)
names(counts.df) <- c("Country", "Count")
counts.df <- sapply(country.code[2:251], GetCountryCount)
counts.df <- sapply(country.code[2:4], GetCountryCount)
View(counts.df)
sapply(country.code[2:4], GetCountryCount)
counts.df <- data.frame("UZ", uz.count, stringsAsFactors = FALSE)
names(counts.df) <- c("Country", "Count")
sapply(country.code[2:4], GetCountryCount)
country.code <- country.code[2:251]
country.code <- country.code[2:4]
for (i in country.code) {
counts.df <- GetCountryCount(i)
}
View(counts.df)
counts.df <- data.frame("UZ", uz.count, stringsAsFactors = FALSE)
names(counts.df) <- c("Country", "Count")
country.code <- country.df$isocode
country.code <- country.code[2:251]
for (i in country.code) {
counts.df <- GetCountryCount(i)
}
View(counts.df)
country.code <- country.code[175:251]
for (i in country.code) {
counts.df <- GetCountryCount(i)
}
result <- left_join(country.df, counts.df)
View(country.df)
colnames(counts.df) <- c("isocode", "Count")
result <- left_join(country.df, counts.df)
library(dplyr)
result <- left_join(country.df, counts.df)
View(result)
colnames(result) <- c("ID", "Country", "Count")
?write.csv
write.csv(result, file = "data/country-count.csv")
library(janeaustenr)
library(tidytext)
library(dplyr)
library(stringr)
library(ggplot2)
austen_books()
install.packages("janeaustenr")
install.packages("tidytext")
library(janeaustenr)
library(tidytext)
library(dplyr)
library(stringr)
library(ggplot2)
books <- austen_books()
View(books)
num.books <- unique(books$book)
num.books <- length(unique(books$book))
View(books)
most.lines <- books %>%
group_by(book) %>%
summarise(line = n())
View(most.lines)
most.lines <- books %>%
group_by(book) %>%
summarise(line = n()) %>%
filter(lines == max(lines)) %>%
select(book)
most.lines <- books %>%
group_by(book) %>%
summarise(lines = n()) %>%
filter(lines == max(lines)) %>%
select(book)
View(most.lines)
most.lines <- books %>%
group_by(book) %>%
summarise(lines = n()) %>%
filter(lines == max(lines)) %>%
select(book)[1,1]
word.list <- books %>%
unnest_tokens(output=word, input=text)
View(word.list)
common.words <- books %>%
group_by(word) %>%
summarize(count = n()) %>%
arrange(-count)
View(word.list)
common.words <- word.list %>%
group_by(word) %>%
summarize(count = n()) %>%
arrange(-count)
View(stop_words)
no.stop.word <- common.words %>%
anti_join(stop_words, by="word")
View(no.stop.word)
no.stop.word %>% filter(count>800) %>%
ggplot(aes(word, count)) +
geom_col()
no.stop.word %>% filter(count>800) %>%
ggplot(aes(word, count)) +
geom_col() +
coord_flip()
no.stop.word %>% filter(count>800) %>%
mutate(word = reorder(word, count)) %>%
ggplot(aes(word, count)) +
geom_col() +
coord_flip()
setwd(~/Docu)
setwd("~/Documents/INFO201/info201groupproject/")
read.csv("data/country-count.csv")
country-data <- read.csv("data/country-count.csv")
country.count <- read.csv("data/country-count.csv")
country.count <- read.csv("data/country-count.csv")
library(plotly)
l <- list(color = toRGB("grey"), width = 0.5)
g <- list(
showframe = FALSE,
showcoastlines = FALSE,
projection = list(type = 'Mercator')
)
View(country.count)
df <- read.csv('https://raw.githubusercontent.com/plotly/datasets/master/2014_world_gdp_with_codes.csv')
View(df)
country.count$code <- df$CODE
left_join(country.cont, df)
left_join(country.count, df)
colnames(df) <- c("Country", "GDP", "Code")
left_join(country.count, df)
df <- read.csv('https://raw.githubusercontent.com/plotly/datasets/master/2014_world_gdp_with_codes.csv', stringsAsFactors=FALSE)
colnames(df) <- c("Country", "GDP", "Code")
country.count <- read.csv("data/country-count.csv")
country.count <- read.csv("data/country-count.csv", stringsAsFactors = FALSE)
left_join(country.count, df)
country.count <- left_join(country.count, df)
View(country.count)
library(dplyr)
p <- plot_geo(country.count) %>%
add_trace(
z = ~count, color = ~count, colors = 'Blues',
text = ~Country, locations = ~ID, marker = list(line = l)
) %>%
colorbar(title = 'Species Count') %>%
layout(
title = 'Endangered Species Count by Country',
geo = g
)
p
p <- plot_geo(country.count) %>%
add_trace(
z = ~Count, color = ~count, colors = 'Blues',
text = ~Country, locations = ~Code, marker = list(line = l)
) %>%
colorbar(title = 'Species Count') %>%
layout(
title = 'Endangered Species Count by Country',
geo = g
)
p
p <- plot_geo(country.count) %>%
add_trace(
z = ~Count, color = ~count,
text = ~Country, locations = ~Code, marker = list(line = l)
) %>%
colorbar(title = 'Species Count', colors="Blues") %>%
layout(
title = 'Endangered Species Count by Country',
geo = g
)
p
p <- plot_geo(country.count) %>%
add_trace(
z = ~Count, color = ~count, colors = "Purples",
text = ~Country, locations = ~Code, marker = list(line = l)
) %>%
colorbar(title = 'Species Count') %>%
layout(
title = 'Endangered Species Count by Country',
geo = g
)
p
country.count <- country.count %>%
left_join(df) %>%
select(ID, Code, Country, Count)
View(country.count)
country.count <- country.count %>%
left_join(df, by= "Country") %>%
select(ID, Code, Country, Count)
df <- read.csv('https://raw.githubusercontent.com/plotly/datasets/master/2014_world_gdp_with_codes.csv', stringsAsFactors=FALSE)
colnames(df) <- c("Country", "GDP", "Code")
country.count <- read.csv("data/country-count.csv", stringsAsFactors = FALSE)
country.count <- country.count %>%
left_join(df, by= "Country") %>%
select(ID, Code, Country, Count)
View(country.count)
iso.codes <- read.csv("data/iso-codes.csv", stringsAsFactors = FALSE)
View(iso.codes)
View(country.count)
iso.codes <- read.csv("data/iso-codes.csv", stringsAsFactors = FALSE)
View(iso.codes)
country.count <- read.csv("data/country-count.csv", stringsAsFactors = FALSE)
country.count <- country.count %>%
left_join(iso.codes, by= "ID")
View(country.count)
country.count <- country.count %>%
left_join(iso.codes, by= "ID") %>%
select(ID, Code, Country, Count)
country.count <- country.count %>%
left_join(iso.codes, by= "ID") %>%
select(ID, Code, Country, Count)
country.count <- country.count %>%
left_join(iso.codes, by= "ID") %>%
select(ID, Code, Country, Count)
country.count <- country.count %>%
left_join(iso.codes, by= "ID") %>%
select(ID, Code, Country, Count)
iso.codes <- read.csv("data/iso-codes.csv", stringsAsFactors = FALSE)
country.count <- read.csv("data/country-count.csv", stringsAsFactors = FALSE)
country.count <- country.count %>%
left_join(iso.codes, by= "ID") %>%
select(ID, Code, Country, Count)
l <- list(color = toRGB("grey"), width = 0.5)
g <- list(
showframe = FALSE,
showcoastlines = FALSE,
projection = list(type = 'Mercator')
)
p <- plot_geo(country.count) %>%
add_trace(
z = ~Count, color = ~count, colors = "Purples",
text = ~Country, locations = ~Code, marker = list(line = l)
) %>%
colorbar(title = 'Species Count') %>%
layout(
title = 'Endangered Species Count by Country',
geo = g
)
p
p <- plot_geo(country.count) %>%
add_trace(
z = ~Count, colors = "Purples",
text = ~Country, locations = ~Code, marker = list(line = l)
) %>%
colorbar(title = 'Species Count') %>%
layout(
title = 'Endangered Species Count by Country',
geo = g
)
p
View(df)
library(plotly)
library(dplyr)
iso.codes <- read.csv("data/iso-codes.csv", stringsAsFactors = FALSE)
country.count <- read.csv("data/country-count.csv", stringsAsFactors = FALSE)
country.count <- country.count %>%
left_join(iso.codes, by= "ID") %>%
select(ID, Code, Country, Count)
l <- list(color = toRGB("grey"), width = 0.5)
g <- list(
showframe = FALSE,
showcoastlines = FALSE,
projection = list(type = 'Mercator')
)
p <- plot_geo(country.count) %>%
add_trace(
z = ~Count, colors = "Purples",
text = ~Country, locations = ~Code, marker = list(line = l)
) %>%
colorbar(title = 'Species Count') %>%
layout(
title = 'Endangered Species Count by Country',
geo = g
)
p
View(country.count)
library(dplyr)
source("get-data.R")
country.ep <- "/api/v3/country/list?token="
country <- AccessAPI(country.ep)
country.df <- country[[2]]
country.code <- country.df$isocode
uz.data <- "/api/v3/country/getspecies/UZ?token="
uz <- AccessAPI(uz.data)
uz.count <- uz[[1]]
uz.df <- uz[[3]]
View(uz.df)
uz.count <- uz.df %>%
filter(category=="CR") %>%
nrow()
counts.df <- data.frame("UZ", uz.count, stringsAsFactors = FALSE)
names(counts.df) <- c("Country", "Count")
GetCountryCount <- function(country.id) {
endpoint <- paste0("/api/v3/country/getspecies/", country.id, "?token=")
country <- AccessAPI(endpoint)
country.df <- country[[3]]
country.count <- country.df %>%
filter(category=="CR") %>%
nrow()
# add to df
df <- c(country.id, country.count)
names(df) <- c("Country", "Count")
return(rbind(counts.df, df))
}
country.code <- country.code[2:4]
for (i in country.code) {
counts.df <- GetCountryCount(i)
}
colnames(counts.df) <- c("isocode", "Count")
result <- left_join(country.df, counts.df)
colnames(result) <- c("ID", "Country", "Count")
View(counts.df)
length(country.code)
country.code <- country.df$isocode
length(country.code)
library(dplyr)
source("get-data.R")
country.ep <- "/api/v3/country/list?token="
country <- AccessAPI(country.ep)
country.df <- country[[2]]
country.code <- country.df$isocode
uz.data <- "/api/v3/country/getspecies/UZ?token="
uz <- AccessAPI(uz.data)
uz.df <- uz[[3]]
uz.count <- uz.df %>%
filter(category=="CR") %>%
nrow()
counts.df <- data.frame("UZ", uz.count, stringsAsFactors = FALSE)
names(counts.df) <- c("Country", "Count")
GetCountryCount <- function(country.id) {
endpoint <- paste0("/api/v3/country/getspecies/", country.id, "?token=")
country <- AccessAPI(endpoint)
country.df <- country[[3]]
country.count <- country.df %>%
filter(category=="CR") %>%
nrow()
# add to df
df <- c(country.id, country.count)
names(df) <- c("Country", "Count")
return(rbind(counts.df, df))
}
country.code <- country.code[2:length(country.code)]
for (i in country.code) {
counts.df <- GetCountryCount(i)
}
View(counts.df)
View(counts.df)
country.code <- country.code[22:length(country.code)]
for (i in country.code) {
counts.df <- GetCountryCount(i)
}
View(counts.df)
View(counts.df)
country.code <- country.df$isocode
country.code[220]
country.code[198]
country.code[22]
country.code[21]
country.code <- country.code[2;251]
country.code <- country.code[2:251]
counts.df <- data.frame("UZ", uz.count, stringsAsFactors = FALSE)
names(counts.df) <- c("Country", "Count")
country.code <- country.code[2:251]
for (i in country.code) {
counts.df <- GetCountryCount(i)
}
country.code <- country.df$isocode
country.code <- country.code[2:251]
counts.df <- data.frame("UZ", uz.count, stringsAsFactors = FALSE)
names(counts.df) <- c("Country", "Count")
for (i in country.code) {
counts.df <- GetCountryCount(i)
}
View(counts.df)
contry.code[22]
country.code[22]
country.code[21]
vn <- AccessAPI("/api/v3/country/getspecies/VN?token=")
vn.length()
length(vn)
library(dplyr)
source("get-data.R")
country.ep <- "/api/v3/country/list?token="
country <- AccessAPI(country.ep)
country.df <- country[[2]]
country.code <- country.df$isocode
uz.data <- "/api/v3/country/getspecies/UZ?token="
uz <- AccessAPI(uz.data)
uz.df <- uz[[3]]
uz.count <- uz.df %>%
filter(category=="CR") %>%
nrow()
counts.df <- data.frame("UZ", uz.count, stringsAsFactors = FALSE)
names(counts.df) <- c("Country", "Count")
GetCountryCount <- function(country.id) {
endpoint <- paste0("/api/v3/country/getspecies/", country.id, "?token=")
country <- AccessAPI(endpoint)
country.df <- country[[length(country)]]
country.count <- country.df %>%
filter(category=="CR") %>%
nrow()
# add to df
df <- c(country.id, country.count)
names(df) <- c("Country", "Count")
return(rbind(counts.df, df))
}
country.code <- country.code[2:251]
for (i in country.code) {
counts.df <- GetCountryCount(i)
}
View(counts.df)
View(counts.df)
View(counts.df)
country.code[43]
country.code[42]
country.code[41]
country.code[40]
print(country.code)
country.code[0]
country.code[1]
country.code[43]
country.code[40]
country.code[41]
country.code[42]
country.code <- country.code[42:251]
for (i in country.code) {
counts.df <- GetCountryCount(i)
}
View(counts.df)
country.code[220]
country.code[221]
country.code <- country.df$isocode
country.code[221]
country.code <- country.code[222:251]
country.code <- country.df$isocode
country.code <- country.code[221:251]
country.code <- country.code[222:251]
for (i in country.code) {
counts.df <- GetCountryCount(i)
}
View(counts.df)
country.code <- country.df$isocode
country.code <- country.code[222:251]
counts.df <- counts.df %>%
filter(!is.na(country))
counts.df <- counts.df[1:221,]
for (i in country.code) {
counts.df <- GetCountryCount(i)
}
an <- AccessAPI("/api/v3/country/getspecies/AN?token=")
country.count <- read.csv("data/country-count.csv", stringsAsFactors = FALSE)
View(country.count)
df <- c("AN", 0)
names(df) <- c("Country", "Count")
counts.df <- rbind(counts.df, df)
country.code <- country.df$isocode
country.code <- country.code[223:251]
for (i in country.code) {
counts.df <- GetCountryCount(i)
}
colnames(counts.df) <- c("isocode", "Count")
result <- left_join(country.df, counts.df)
colnames(result) <- c("ID", "Country", "Count")
write.csv(result, file = "data/country-count.csv")
iso.codes <- read.csv("data/iso-codes.csv", stringsAsFactors = FALSE)
country.count <- read.csv("data/country-count.csv", stringsAsFactors = FALSE)
country.count <- country.count %>%
left_join(iso.codes, by= "ID") %>%
select(ID, Code, Country, Count)
View(country.count)
l <- list(color = toRGB("grey"), width = 0.5)
g <- list(
showframe = FALSE,
showcoastlines = FALSE,
projection = list(type = 'Mercator')
)
p <- plot_geo(country.count) %>%
add_trace(
z = ~Count, colors = "Purples",
text = ~Country, locations = ~Code, marker = list(line = l)
) %>%
colorbar(title = 'Species Count') %>%
layout(
title = 'Endangered Species Count by Country',
geo = g
)
p
